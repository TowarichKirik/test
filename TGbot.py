import telebot
from dotenv import load_dotenv
from telebot import types
import os
import backend

load_dotenv()
bot = telebot.TeleBot(os.getenv('BOT_TOKEN')) # —Ç–æ–∫–µ–Ω



#start

@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton("üîê –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data='register')
    btn2 = types.InlineKeyboardButton("üìù –í–æ–π—Ç–∏", callback_data='login')
    markup.add(btn2, btn1)

    bot.send_message(message.chat.id, 'üè¶ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ <b>Fake Bank</b>!\n\nüìù –î–ª—è <b>–í—Ö–æ–¥–∞</b> –≤ —Å–∏—Å—Ç–µ–º—É –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à <b>–õ–æ–≥–∏–Ω</b> –∏ <b>–ü–∞—Ä–æ–ª—å</b>\n\nüîê –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç—É –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ <b>Fake Bank</b>, <b>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å</b>!', parse_mode='html', reply_markup=markup)
@bot.callback_query_handler(func= lambda call: True)
def callback_register(call):
    if call.data == 'register':
        bot.send_message(call.message.chat.id, '<b>Fake Bank</b>\n\nüîê –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:\n\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à <b>–õ–æ–≥–∏–Ω</b> –∏ <b>–ü–∞—Ä–æ–ª—å</b> –≤ <b>—Ä–∞–∑–Ω—ã—Ö</b> —Å–æ–æ–±—â–µ–Ω–∏—è—Ö', parse_mode='html')
        bot.register_next_step_handler(call.message, user_login_reg)
    elif call.data == 'login':
        bot.send_message(call.message.chat.id, '<b>Fake Bank</b>\n\nüìù –í—Ö–æ–¥:\n\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à <b>–õ–æ–≥–∏–Ω</b> –∏ <b>–ü–∞—Ä–æ–ª—å</b> –≤ <b>—Ä–∞–∑–Ω—ã—Ö</b> —Å–æ–æ–±—â–µ–Ω–∏—è—Ö', parse_mode='html')
login = None
password = None
cur = backend.cursor
def user_login_reg(message):
    global login
    login = message.text.strip() # deleting spacing
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ <b>–ü–∞—Ä–æ–ª—å</b>:', parse_mode='html')
    bot.register_next_step_handler(message, user_password_reg)
# def user_password_reg(message):
#     global password
#     login = message.text.strip()
#     cur.execute("INSERT INTO users (")


bot.infinity_polling()